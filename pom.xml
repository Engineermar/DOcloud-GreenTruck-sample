<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.ibm.optim.oaas</groupId>
  <artifactId>greentruck</artifactId>
  <version>1.0-R1-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>greentruck</name>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.ibm.optim.oaas</groupId>
      <artifactId>api_java_client</artifactId>
      <version>1.0-R1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.mongojack</groupId>
      <artifactId>mongojack</artifactId>
      <version>2.9.4</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-jdk14</artifactId>
      <version>1.7.25</version>
    </dependency>
    <dependency>
      <groupId>javax</groupId>
      <artifactId>javaee-api</artifactId>
      <version>7.0</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.mongodb</groupId>
      <artifactId>mongo-java-driver</artifactId>
      <version>3.8.2</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.jaxrs</groupId>
      <artifactId>jackson-jaxrs-json-provider</artifactId>
      <version>2.8.11</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-jsonSchema</artifactId>
      <version>2.8.11</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-scala_2.10</artifactId>
      <version>2.8.11</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>4.5.6</version>
    </dependency>
    <dependency>
      <groupId>com.ibm.icu</groupId>
      <artifactId>icu4j</artifactId>
      <version>63.1</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.8.11.2</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <version>2.8.11</version>
    </dependency>
    
    <!-- for unit tests -->
    <dependency>
      <groupId>org.glassfish.jersey.core</groupId>
      <artifactId>jersey-client</artifactId>
      <version>2.27</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.inject</groupId>
      <artifactId>jersey-hk2</artifactId>
      <version>2.27</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>5.3.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
		  <!-- Ensure we use JDK 1.8 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.0</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
      <!-- package the WAR inside the Liberty server -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>3.2.2</version>
        <configuration>
          <outputDirectory>${project.build.directory}/liberty/wlp/usr/servers/defaultServer/apps</outputDirectory>
          <warName>${project.name}</warName>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.8</version>
        <executions>
          <!-- generate the local server.env to populate VCAP_SERVICES -->
          <execution>
            <id>create-server-env-for-local</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <echo>Detected a deployment config, creating a server.env file
                  from VCAP_SERVICES property with local URLs</echo>
                <echo append="false" file="${project.build.directory}/server.env">
                  VCAP_SERVICES={ "user-provided": [{"name": "docloud","label":"user-provided", "credentials":{"client_id":"${docloud.apikey.clientid}", "url":"${docloud.baseurl}"}}]}
                </echo>
              </target>
            </configuration>
          </execution>
          <!-- Replace server.xml for bluemix -->
          <execution>
            <id>repack</id>
            <phase>deploy</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <unzip src="${project.build.directory}/${project.name}-server.zip" dest="${project.build.directory}/tmp" />
                <copy overwrite="true" file="src/main/wlp/server-bluemix.xml"
                  tofile="${project.build.directory}/tmp/wlp/usr/servers/defaultServer/server.xml" />
                <delete file="${project.build.directory}/tmp/wlp/usr/servers/defaultServer/server.env" />
                <zip basedir="${project.build.directory}/tmp" destfile="${project.build.directory}/${project.name}-server-bluemix.zip" />
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Copy mongo driver to Liberty server -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.1.1</version>
        <executions>
          <execution>
            <id>copy</id>
            <phase>package</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.mongodb</groupId>
                  <artifactId>mongo-java-driver</artifactId>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}/liberty/wlp/usr/servers/defaultServer/lib</outputDirectory>
                  <destFileName>mongo-java-driver.jar</destFileName>
                </artifactItem>
              </artifactItems>
              <outputDirectory>${project.build.directory}/wars</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>true</overWriteSnapshots>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Configure the Liberty server -->
      <plugin>
        <groupId>net.wasdev.wlp.maven.plugins</groupId>
        <artifactId>liberty-maven-plugin</artifactId>
        <version>2.6.1</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>package-server</goal>
            </goals>
          </execution>
          <execution>
            <id>start</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start-server</goal>
            </goals>
            <configuration>
              <serverStartTimeout>30</serverStartTimeout>
            </configuration>
          </execution>
          <execution>
            <id>stop</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop-server</goal>
            </goals>
            <configuration>
              <timeout>60000</timeout>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <install>
            <licenseCode>${wlp.licenseCode}</licenseCode>
          </install>
          <configFile>src/main/wlp/server.xml</configFile>
          <serverEnv>${project.build.directory}/server.env</serverEnv>
          <packageFile>${project.build.directory}/${project.name}-server.zip</packageFile>
          <include>usr</include>
          <bootstrapProperties>
            <Port>9080</Port>
          </bootstrapProperties>
          <features>
            <acceptLicense>true</acceptLicense>
          </features>
        </configuration>
      </plugin>
      <!-- Deploy to bluemix -->
      <plugin>
        <groupId>org.cloudfoundry</groupId>
        <artifactId>cf-maven-plugin</artifactId>
        <version>1.1.3</version>
        <executions>
          <execution>
            <phase>deploy</phase>
            <goals>
              <goal>push</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <server>bluemix_prod</server>
          <target>${cf.target}</target>
          <appname>greentruck-${cf.urlQualifier}</appname>
          <url>greentruck-${cf.urlQualifier}.${cf.domain}</url>
          <path>${project.build.directory}/${project.name}-server-bluemix.zip</path>
          <space>${cf.space}</space>
          <memory>512</memory>
          <services>
            <service>
              <name>docloud</name>
              <label>user-provided</label>
              <userProvidedCredentials>
                <url>${docloud.baseurl}</url>
                <client_id>${docloud.apikey.clientid}</client_id>
              </userProvidedCredentials>
            </service>
            <service>
              <name>mongo-greentruck</name>
              <label>user-provided</label>
              <userProvidedCredentials>
                <user>${mongo.user}</user>
                <password>${mongo.password}</password>
                <hosts>${mongo.hosts}</hosts>
                <ports>${mongo.ports}</ports>
              </userProvidedCredentials>
            </service>
          </services>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.22.1</version>
        <executions>
          <execution>
            <id>integration-test</id>
            <goals>
              <goal>integration-test</goal>
            </goals>
          </execution>
          <execution>
            <id>verify</id>
            <goals>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>install-liberty</id>
      <activation>
        <file>
          <missing>target/liberty/wlp/bin</missing>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>net.wasdev.wlp.maven.plugins</groupId>
            <artifactId>liberty-maven-plugin</artifactId>
            <executions>
              <execution>
                <phase>compile</phase>
                <goals>
                  <goal>create-server</goal>
                  <goal>install-feature</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <distributionManagement>
    <repository>
      <id>internal.repo</id>
      <name>Temporary Staging Repository</name>
      <url>file://${project.build.directory}/mvn-repo</url>
    </repository>
  </distributionManagement>
</project>
